@page "/subject-selection"
@using System.Net.Http.Json
@using StudentRecruitment.Presentation.Models
@inject HttpClient Http

<h3>Subject Selection</h3>

<div class="row mb-3">
    <div class="col-md-2">
        <button class="btn btn-secondary" @onclick="PreviousPage" disabled="@(!HasPreviousPage)">Previous</button>
    </div>
    <div class="col-md-2">
        <button class="btn btn-secondary" @onclick="NextPage" disabled="@(!HasNextPage)">Next</button>
    </div>
</div>

@if (subjects == null)
{
    <p>Loading...</p>
}
else if (subjects.Count == 0)
{
    <p>No subjects found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var subject in subjects)
            {
                <tr>
                    <td>@subject.Id</td>
                    <td>@subject.Name</td>
                    <td>@subject.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SubjectModel> subjects;
    private int totalCount;
    private int pageNumber = 1;
    private int pageSize = 30;

    private bool HasNextPage => pageNumber * pageSize < totalCount;
    private bool HasPreviousPage => pageNumber > 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadSubjects();
    }

    private async Task LoadSubjects()
    {
        var response = await Http.GetFromJsonAsync<PagedDataModel<SubjectModel>>($"api/subject/get-subjects?pageNumber={pageNumber}&pageSize={pageSize}");

        if (response != null)
        {
            subjects = response.Results;
            totalCount = response.TotalCount;
        }
        else
        {
            subjects = new List<SubjectModel>();
        }
    }

    private async Task NextPage()
    {
        if (HasNextPage)
        {
            pageNumber++;
            await LoadSubjects();
        }
    }

    private async Task PreviousPage()
    {
        if (HasPreviousPage)
        {
            pageNumber--;
            await LoadSubjects();
        }
    }
}
