@page "/login"
@using System.Net.Http.Json
@using StudentRecruitment.Presentation.Services
@inject HttpClient Http
@inject TokenService TokenService
@inject NavigationManager Navigation

<div class="container">
    <h3>Login</h3>
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger">@error</div>
    }

    <EditForm Model="credentials" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="username" class="form-label">Username</label>
            <InputText id="username" class="form-control" @bind-Value="credentials.Username" />
        </div>
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="credentials.Password" />
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>
</div>

@code {
    private CredentialDto credentials = new CredentialDto();
    private string error;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/authorization", credentials);
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadFromJsonAsync<LoginResponse>();
                await TokenService.SetTokenAsync(content.Token);
                var role = await TokenService.GetUserRoleAsync();

                if (role == "Student")
                {
                    Navigation.NavigateTo("myprofile", true);
                }
                else if (role == "Admin")
                {
                    Navigation.NavigateTo("admin", true);
                }
                else if (role == "Employer")
                {
                    Navigation.NavigateTo("student-selection", true);
                }
                else
                {
                    Navigation.NavigateTo("/");
                }
            }
            else
            {
                error = "Login failed. Please check your credentials.";
            }
        }
        catch (Exception ex)
        {
            error = $"An error occurred: {ex.Message}";
        }
    }

    public class CredentialDto
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class LoginResponse
    {
        public string Token { get; set; }
    }
}
