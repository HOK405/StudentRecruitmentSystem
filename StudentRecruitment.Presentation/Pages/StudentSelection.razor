@page "/student-selection"
@using System.Net.Http.Json
@using StudentRecruitment.Presentation.Models
@inject HttpClient Http

<h3>Student Selection</h3>

<div class="row">
    @foreach (var subjectRating in subjectRatings)
    {
        <div class="col-md-4">
            <input type="number" @bind="subjectRating.SubjectId" class="form-control" placeholder="Subject ID" />
        </div>
        <div class="col-md-4">
            <input type="number" @bind="subjectRating.Rating" class="form-control" placeholder="Rating" />
        </div>
        <div class="col-md-4">
            <button class="btn btn-danger" @onclick="() => RemoveSubjectRating(subjectRating)">Remove</button>
        </div>
    }
</div>
<div class="row">
    <div class="col-md-4">
        <button class="btn btn-success" @onclick="AddSubjectRating">Add Another Subject</button>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <button class="btn btn-primary" @onclick="SearchStudents">Search</button>
    </div>
</div>

@if (students == null)
{
    <p>Loading...</p>
}
else if (students.Count == 0)
{
    <p>No students found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Patronimic</th>
                <th>Birth Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.Id</td>
                    <td>@student.Name</td>
                    <td>@student.Surname</td>
                    <td>@student.Patronimic</td>
                    <td>@student.BirthDate.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<StudentModel> students;
    private int totalCount;
    private int pageNumber = 1;
    private int pageSize = 30;
    private List<SubjectRatingModel> subjectRatings = new List<SubjectRatingModel>
    {
        new SubjectRatingModel { SubjectId = 1, Rating = 5 }
    };

    public async Task SearchStudents()
    {
        var response = await Http.PostAsJsonAsync($"api/student/get-students-rating?pageNumber={pageNumber}&pageSize={pageSize}", subjectRatings);

        if (response.IsSuccessStatusCode)
        {
            var pagedData = await response.Content.ReadFromJsonAsync<PagedDataModel<StudentModel>>();
            students = pagedData.Results;
            totalCount = pagedData.TotalCount;
        }
        else
        {
            students = new List<StudentModel>();
        }
    }

    private void AddSubjectRating()
    {
        subjectRatings.Add(new SubjectRatingModel());
    }

    private void RemoveSubjectRating(SubjectRatingModel subjectRating)
    {
        subjectRatings.Remove(subjectRating);
    }
}